{"version":3,"sources":["assets/img sync /^/.//.*$","assets/img/satopo.png","assets/img/trase.png","assets/img/usrivers.png","components/utils/utils.ts","components/NavBar/Menu/MenuOption/MenuOption.tsx","components/NavBar/Menu/menuOptions.ts","components/NavBar/Menu/Menu.tsx","components/NavBar/NameHeader/NameHeader.tsx","components/NavBar/Voronoi/utils/colors.js","components/NavBar/Voronoi/utils/plot-utils.js","components/NavBar/Voronoi/Voronoi.jsx","components/NavBar/NavBar.tsx","components/MapsGrid/mapProjects.ts","components/MapsGrid/MapsGridItem/MapsGridItem.tsx","components/MapsGrid/MapsGrid.tsx","components/About/About.tsx","components/MapRoutes/MapRoutes.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","r","fileExtension","MenuOption","optionPath","optionLabel","isActive","handleOptionClick","to","className","classNames","onClick","menuOptions","Menu","useState","activeLink","setActiveLink","menuOptionObject","NameHeader","colorSchemes","interpolateRainbow","interpolatePlasma","interpolateTurbo","interpolateCool","interpolateInferno","interpolateYlOrRd","colorGlobal","Math","floor","random","length","polyToPath","polygon","join","generateRandomPoints","nPoints","minX","maxX","minY","maxY","range","i","drawSubPolygons","level","defs","pickColor","parentLevel","selectAll","each","d","box","this","getBBox","pointsNew","x","width","y","height","polygons2","voronoi","extent","polygons","drawVoronoi","select","parentNode","outline","pathId","append","attr","addClipPath","parent","clipArea","isSub","localColor","insert","data","enter","hsl","brighter","generateVoronoi","Voronoi","points","useEffect","initialPolygons","polygonsGroup","undefined","plot","voronoiWidth","rx","ry","stroke","clipPath","transform","NavBar","mapProjects","projectTitle","imgSlug","MapsGridItem","projectThumbnail","slug","console","log","src","default","alt","mapImages","require","fileName","substr","replace","MapsGrid","project","filter","image","re","RegExp","match","About","MapRoutes","path","App","basename","process","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231611e6.chunk.js","sourcesContent":["var map = {\n\t\"./satopo.png\": 160,\n\t\"./trase.png\": 161,\n\t\"./usrivers.png\": 162\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 159;","export default __webpack_public_path__ + \"static/media/satopo.0a51ed49.png\";","export default __webpack_public_path__ + \"static/media/trase.de19fa82.png\";","export default __webpack_public_path__ + \"static/media/usrivers.09afb6e0.png\";","export const importAllImages = (\n  r: __WebpackModuleApi.RequireContext,\n  fileExtension: string\n) =>\n  r.keys().map((fileName: string) => ({\n    slug: fileName.substr(2).replace(fileExtension, \"\"),\n    module: r(fileName),\n  }));\n","import classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  optionPath: string;\n  optionLabel: string;\n  isActive: boolean;\n  handleOptionClick: (optionLabel: string) => void;\n}\n\nexport const MenuOption = ({\n  optionPath,\n  optionLabel,\n  isActive,\n  handleOptionClick,\n}: Props) => {\n  return (\n    <Link\n      to={\"/\" + optionPath}\n      className={classNames(\"px-2 transition-all duration-150 text-black\", {\n        \"text-opacity-40\": !isActive,\n        \"pointer-events-none\": isActive,\n      })}\n      onClick={() => handleOptionClick(optionLabel)}\n    >\n      {optionLabel}\n    </Link>\n  );\n};\n","import { MenuOptionObject } from \"../../../types/types\";\n\nexport const menuOptions: MenuOptionObject[] = [\n  { optionPath: \"\", optionLabel: \"Maps\" },\n  { optionPath: \"about\", optionLabel: \"About\" },\n];\n","import { useState } from \"react\";\nimport { MenuOption } from \"./MenuOption/MenuOption\";\nimport { menuOptions } from \"./menuOptions\";\n\nexport const Menu = () => {\n  const [activeLink, setActiveLink] = useState(\"Maps\");\n\n  const handleOptionClick = (optionLabel: string) => {\n    setActiveLink(optionLabel);\n  };\n  return (\n    <div className=\"flex justify-between text-xs\">\n      {menuOptions.map((menuOptionObject) => (\n        <MenuOption\n          key={menuOptionObject.optionLabel}\n          optionPath={menuOptionObject.optionPath}\n          optionLabel={menuOptionObject.optionLabel}\n          isActive={menuOptionObject.optionLabel === activeLink}\n          handleOptionClick={handleOptionClick}\n        />\n      ))}\n    </div>\n  );\n};\n","export const NameHeader = () => {\n  return <div className=\"md:pt-4 md:pb-2\">Rowland Williams</div>;\n};\n","import {\n  interpolateRainbow,\n  interpolatePlasma,\n  interpolateTurbo,\n  interpolateCool,\n  interpolateInferno,\n  interpolateYlOrRd,\n} from \"d3\";\n\n// randomly pick color scheme\nexport const colorSchemes = [\n  interpolateRainbow,\n  interpolatePlasma,\n  interpolateTurbo,\n  interpolateCool,\n  interpolateInferno,\n  interpolateYlOrRd,\n];\n","import { select, selectAll, range, hsl } from \"d3\";\nimport voronoi from \"d3-voronoi/src/voronoi\";\nimport { colorSchemes } from \"./colors\";\n\nconst voronoiWidth = 96;\n\nconst colorGlobal =\n  colorSchemes[Math.floor(Math.random() * colorSchemes.length)];\nconst pointSeed = 2;\n\nconst polyToPath = (polygon) => {\n  return polygon ? \"M\" + polygon.join(\"L\") + \"Z\" : null;\n};\n\n// generate points for a given g size\nexport const generateRandomPoints = (nPoints, minX, maxX, minY, maxY) => {\n  return range(0, nPoints).map(function (i) {\n    return [\n      Math.floor(Math.random() * (maxX - minX)) + minX,\n      Math.floor(Math.random() * (maxY - minY)) + minY,\n    ];\n  });\n};\n\nconst addClipPath = (outline, pathId, defs) => {\n  defs\n    .append(\"clipPath\")\n    .attr(\"id\", pathId)\n    .append(\"path\")\n    .attr(\"d\", polyToPath(outline));\n};\n\nexport const drawSubPolygons = (level, defs, pickColor) => {\n  var parentLevel = level - 1;\n\n  // find all parent polygons using parent level\n  var selection = selectAll('path[data-level=\"' + parentLevel + '\"]');\n\n  // iterate across each parent polygon\n  selection.each(function (d, i) {\n    // determine the bounding box\n    var box = this.getBBox();\n\n    // gernerate new points for the bounding box of each polygon\n    var pointsNew = generateRandomPoints(\n      pointSeed * level,\n      box.x,\n      box.x + box.width,\n      box.y,\n      box.y + box.height\n    );\n\n    // set extent of new voronoi based on bounding coords\n    var voronoi2 = voronoi().extent([\n      [box.x, box.y],\n      [box.x + box.width, box.y + box.height],\n    ]);\n\n    //define new coords\n    var polygons2 = voronoi2.polygons(pointsNew);\n    var isSub = true;\n    // draw new Voronoi and clip based on parent clip path id\n    drawVoronoi(\n      select(this.parentNode),\n      polygons2,\n      \"cp-\" + parentLevel + \"-\" + i,\n      level,\n      pickColor,\n      isSub\n    );\n    addClipPath(d, \"cp-\" + parentLevel + \"-\" + i, defs);\n  });\n};\n\nexport const drawVoronoi = (\n  parent,\n  polygons,\n  clipArea,\n  level,\n  pickColor,\n  isSub\n) => {\n  if (pickColor) {\n    var localColor =\n      colorSchemes[Math.floor(Math.random() * colorSchemes.length)];\n  }\n\n  parent\n    .insert(\"g\", \":first-child\")\n    .attr(\"clip-path\", function (d) {\n      return clipArea ? \"url(#\" + clipArea + \")\" : \"\";\n    })\n    .attr(\"class\", \"polygons\")\n    .selectAll(\"path\")\n    .data(polygons)\n    .enter()\n    .insert(\"path\")\n    .attr(\"data-level\", level)\n    .attr(\"stroke-width\", function () {\n      return 4 / ((level + 1) * 2);\n    })\n    .attr(\"stroke\", function () {\n      hsl(\"#000\").brighter(level);\n    })\n    .attr(\"fill\", function () {\n      return level === 0\n        ? \"\"\n        : pickColor\n        ? localColor(Math.random())\n        : colorGlobal(Math.random());\n    })\n    .attr(\"fill-opacity\", \"0.4\")\n    .attr(\"d\", polyToPath);\n};\n\n// initial voronoi function\nvar generateVoronoi = voronoi().extent([\n  [0, 0],\n  [voronoiWidth, voronoiWidth],\n]);\n\nexport const plot = (pickColor, points) => {\n  var initialPolygons = generateVoronoi(points).polygons();\n\n  var polygonsGroup = select(\"#polygon-group\");\n\n  // append defs here and pass down\n  var defs = select(\".chart\").append(\"defs\");\n\n  drawVoronoi(polygonsGroup, initialPolygons, undefined, 0, pickColor);\n  var subPolygons = drawSubPolygons(1, defs, pickColor);\n  subPolygons = drawSubPolygons(2, defs, pickColor);\n};\n","import { useEffect } from \"react\";\nimport { generateRandomPoints, plot } from \"./utils/plot-utils\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\n\nconst voronoiWidth = 64;\nconst padding = 1;\n\nconst Voronoi = () => {\n  // randomly pick color scheme\n\n  \n  var pointSeed = 5; \n\n  var pickColor = Math.random() < 0.5;\n\n  const points = generateRandomPoints(\n    pointSeed,\n    0,\n    voronoiWidth,\n    0,\n    voronoiWidth\n  );\n  // plot on load\n  useEffect(() => {\n    plot(pickColor, points);\n  });\n\n  return (\n    <div className=\"w-10 h-10 md:w-16 md:h-16 rounded-md overflow-hidden transition-all duration-150 border-1 border-gray-800 hover:border-white \">\n      <svg width=\"100%\" height=\"100%\" id=\"voronoi\">\n        <defs>\n          <clipPath id=\"rect-clip\">\n            <rect\n              width={voronoiWidth + padding}\n              height={voronoiWidth + padding}\n              rx=\"5px\"\n              ry=\"5px\"\n              stroke=\"none\"\n            ></rect>\n          </clipPath>\n        </defs>\n        <g\n          id=\"polygon-group\"\n          clipPath=\"url(#rect-clip)\"\n          transform={\"translate(\" + -padding + \",\" + -padding + \")\"}\n        ></g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Voronoi;\n","import { Link } from \"react-router-dom\";\nimport { Menu } from \"./Menu/Menu\";\nimport { NameHeader } from \"./NameHeader/NameHeader\";\nimport Voronoi from \"./Voronoi/Voronoi\";\n\nexport const NavBar = () => {\n  return (\n    <div className=\"w-full flex md:flex-col justify-between items-center\">\n      <Link to=\"/\" className=\"flex md:flex-col items-center\">\n        <Voronoi />\n        <NameHeader />\n      </Link>\n      <Menu />\n    </div>\n  );\n};\n","export const mapProjects = [\n  { projectTitle: \"SOUTH AUSTRALIAN TOPOGRAPHY\", imgSlug: \"satopo\" },\n  { projectTitle: \"US RIVERS\", imgSlug: \"usrivers\" },\n  { projectTitle: \"SUPPLY CHAIN MAPPING\", imgSlug: \"trase\" },\n];\n","import { select } from \"d3\";\nimport { Link } from \"react-router-dom\";\nimport { ImgData } from \"../../../types/types\";\n\ninterface Props {\n  projectTitle: string;\n  projectThumbnail: ImgData;\n}\n\nexport const MapsGridItem = ({ projectTitle, projectThumbnail }: Props) => {\n  const rotateVoronoi = () => {\n    // const transform = transform(d3.select(this).attr(\"transform\"));\n\n    const voronoi = select(\"#voronoi\");\n\n    console.log(voronoi.attr(\"transform\"));\n    // .attr(\"transform\", \"rotate(90)\");\n  };\n  return (\n    <Link to={projectThumbnail.slug} onClick={rotateVoronoi}>\n      <div className=\"flex flex-col items-center md:mx-4\">\n        <div className=\"w-80 h-80 transition-opacity duration-150 hover:opacity-90 overflow-hidden\">\n          <img\n            src={projectThumbnail.module.default}\n            alt={projectThumbnail.slug}\n          />\n        </div>\n        <div className=\"py-2 text-2xs\">{projectTitle}</div>\n      </div>\n    </Link>\n  );\n};\n","import { ImgData } from \"../../types/types\";\nimport { importAllImages } from \"../utils/utils\";\nimport { mapProjects } from \"./mapProjects\";\nimport { MapsGridItem } from \"./MapsGridItem/MapsGridItem\";\n\nconst mapImages: ImgData[] = importAllImages(\n  require.context(\"../../assets/img/\"),\n  \".png\"\n);\n\nexport const MapsGrid = () => {\n  return (\n    <div className=\"md:flex justify-center flex-wrap py-8 w-full xl:px-24 \">\n      {mapProjects.map((project) => (\n        <MapsGridItem\n          projectTitle={project.projectTitle}\n          projectThumbnail={\n            mapImages.filter((image) => {\n              const re = new RegExp(project.imgSlug, \"g\");\n              return image.slug.match(re);\n            })[0]\n          }\n        />\n      ))}\n    </div>\n  );\n};\n","export const About = () => {\n  return (\n    <div className=\"md:flex justify-center flex-wrap py-8 h-screen  w-full md:px-24\">\n      about\n    </div>\n  );\n};\n","import { Route } from \"react-router\";\nimport { mapProjects } from \"../MapsGrid/mapProjects\";\n\nexport const MapRoutes = () => {\n  return (\n    <>\n      {mapProjects.map((project) => (\n        <Route path={\"/\" + project.imgSlug}>{project.projectTitle}</Route>\n      ))}\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { NavBar } from \"./components/NavBar/NavBar\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MapsGrid } from \"./components/MapsGrid/MapsGrid\";\nimport { About } from \"./components/About/About\";\nimport { MapRoutes } from \"./components/MapRoutes/MapRoutes\";\n\nfunction App() {\n  return (\n    <div className=\"p-2 md:p-16 font-inter-light text-lg text-gray-800\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <MapsGrid />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <MapRoutes />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}